{hidden}
When using the Grails Maven plugin, Grails' dependency resolution mechanics are disabled as it is assumed that you will manage dependencies with Maven's @pom.xml@ file.

However, if you would like to continue using Grails regular commands like [run-app|commandLine], [test-app|commandLine] and so on then you can tell Grails' command line to load dependencies from the Maven @pom.xml@ file instead.

To do so simply add the following line to your @BuildConfig.groovy@:

{code}
grails.project.dependency.resolution = {
    pom true
    ..
}
{code}

The line @pom true@ tells Grails to parse Maven's @pom.xml@ and load dependencies from there.
{hidden}

当使用Grails的Maven插件时，Grails自带的依赖解析机制将被禁止，因为其假设你已经使用Maven的@pom.xml@来管理依赖了。

即使这样，你如果想继续使用Grails的常规命令比如[run-app|commandLine]、[test-app|commandLine]等等，你还是可以通过其命令行从Maven的@pom.xml@加载依赖的。

你只需要在@BuildConfig.groovy@文件中简单加入如下即可：

{code}
grails.project.dependency.resolution = {
    pom true
    ..
}
{code}

@pom true@就是用来告诉Grails要使用Maven的@pom.xml@来加载依赖。
