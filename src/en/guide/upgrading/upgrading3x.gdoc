Generally to upgrade an application from Grails 3.0 you can simply modify the version of Grails in @gradle.properties@.

There are however some differences to Grails 3.0.x that are documented below.

h4. Hibernate Plugin

For the GORM 5 release the @hibernate@ plugin has been renamed to @hibernate4@ (and there are @hibernate3@ and @hibernate5@ versions too). You should change your @build.gradle@ to reflect that:

{code}
compile 'org.grails.plugins:hibernate4'
{code}

h4. Spring Boot 1.3 and Spring 4.2

Grails 3.1 ships with upgraded third party libraries that may require changes. See the [Spring Boot upgrade notes|https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.3-Release-Notes] for information.

Unlike Spring Boot 1.2, Spring Boot 1.3 no longer uses the [Gradle Application Plugin|https://docs.gradle.org/current/userguide/application_plugin.html] so if you relied on any behavior the application plugin then the plugin will need to be re-applied to your @build.gradle@.

Spring Boot 1.3 also uses Spring Security 4.x by default, so if you project depends on Spring Security 3.x you have to force a downgrade. For example:

{code}
compile 'org.springframework.security:spring-security-core:3.2.9.RELEASE'
compile 'org.springframework.security:spring-security-web:3.2.9.RELEASE'
{code}

h4. Resource annotation defaults to JSON instead of XML

The [Resource|api:grails.rest.Resource] annotation applied to domain classes defaults to XML in Grails 3.0.x, but in Grails 3.1.x and above it defaults to JSON.

If you use this annotation with the expecation of produces XML responses as the default you can modify the definition as follows:

{code}
import grails.rest.*

@Resource(formats=['xml', 'json'])
class MyDomainClass {}
{code}

This will restore the Grails 3.0.x behavior.

h4. Geb and HTMLUnit 2.18

If you use Geb with HTMLUnit (something that is not recommended, as a more native driver such as PhantomJS is recommended) you will need to upgrade your dependencies in @build.grade@:

{code}
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.18'
{code}

Note that there are also some changes in behavior in HTMLUnit 2.18 that may cause issues in existing tests including:

* Expressions that evaluate the title (Example @$('title')@) now return blank and should be replaced with just @title@
* If you return plain text in a response without surrounding HTML tags, these are no longer regarded as valid responses and should be wrapped in the required tags.